type Query {
  node(id: String!): Node!
  clientVersion: String!
  user(id: String!): User!
  me: User!
  guestbooks: [Guestbook!]!
  guestbook(id: String!): Guestbook!
}

interface Node {
  id: ID!
}

type User implements Node {
  id: ID!
  displayName: String!
  profilePictureUrl: String!
  roles: [DiscordRole!]!
}

type DiscordRole {
  id: ID!
  displayName: String!
  colorHex: String!
}

type Guestbook implements Node {
  id: ID!
  authorUserId: String!
  text: String!
  createdAt: Float!
  author: User!
}

type Mutation {
  guestbookCreate(input: GuestbookCreateInput!): Guestbook!
}

input GuestbookCreateInput {
  text: String!
}
